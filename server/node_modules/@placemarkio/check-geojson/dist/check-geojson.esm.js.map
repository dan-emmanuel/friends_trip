{"version":3,"file":"check-geojson.esm.js","sources":["../src/errors.ts","../src/types.ts","../src/get_type.ts","../src/get_member_value.ts","../src/get_array.ts","../src/get_object.ts","../src/get_coordinates.ts","../src/enforce_position.ts","../src/check_duplicate_keys.ts","../src/enforce_same_position.ts","../src/enforce_position_array.ts","../src/enforce_bbox.ts","../src/forbid_confusing_properties.ts","../src/index.ts"],"sourcesContent":["import { LocRange } from '@humanwhocodes/momoa';\n\ninterface HintIssueType {\n  code: 'invalid_type';\n  loc: LocRange;\n  // code: ZodIssueCode;\n  message?: string;\n}\n\ninterface HintJSONIssue {\n  code: 'invalid_json';\n  line: number;\n}\n\nexport type HintIssue = HintIssueType | HintJSONIssue;\n\nexport class HintError extends Error {\n  issues: HintIssue[] = [];\n\n  constructor(issues: HintIssue[]) {\n    super();\n    // restore prototype chain\n    const actualProto = new.target.prototype;\n    Object.setPrototypeOf(this, actualProto);\n    this.issues = issues;\n  }\n\n  get message() {\n    return JSON.stringify(this.issues, null, 2);\n  }\n}\n","import { GeoJSON } from 'geojson';\n\nexport type GeoJSONTypeSet = Set<GeoJSON['type']>;\n\nexport const GEOJSON_FEATURE_TYPE = new Set<GeoJSON['type']>(['Feature']);\n\nexport const GEOJSON_GEOMETRY_TYPES = new Set<GeoJSON['type']>([\n  'Point',\n  'MultiPoint',\n  'Polygon',\n  'MultiPolygon',\n  'LineString',\n  'MultiLineString',\n  'GeometryCollection',\n]);\n\nexport const GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION = new Set<\n  GeoJSON['type']\n>([\n  'Point',\n  'MultiPoint',\n  'Polygon',\n  'MultiPolygon',\n  'LineString',\n  'MultiLineString',\n]);\n\nexport const GEOJSON_TYPES = new Set<GeoJSON['type']>([\n  ...GEOJSON_GEOMETRY_TYPES,\n  'Feature',\n  'FeatureCollection',\n]);\n","import { GeoJSONTypeSet } from './types';\nimport { GeoJSON } from 'geojson';\nimport { HintIssue, HintError } from './errors';\nimport { Node } from '@humanwhocodes/momoa';\n\nexport function getType(\n  issues: HintIssue[],\n  node: Node,\n  allowedTypes: GeoJSONTypeSet\n) {\n  if (node.type !== 'Object') {\n    throw new HintError([\n      {\n        code: 'invalid_type',\n        message: 'Expected an object, but found an incorrect type.',\n        loc: node.loc,\n      },\n    ]);\n  }\n\n  const typeMember = node.members.find(member => {\n    return member.name.value === 'type';\n  });\n\n  if (!typeMember) {\n    throw new HintError([\n      {\n        code: 'invalid_type',\n        message: 'This GeoJSON object is missing its type member.',\n        loc: node.loc,\n      },\n    ]);\n  }\n\n  const value = typeMember.value;\n\n  if (value.type !== 'String') {\n    issues.push({\n      code: 'invalid_type',\n      message: 'The type member should have been a string.',\n      loc: value.loc,\n    });\n\n    return {};\n  }\n\n  if (!allowedTypes.has(value.value as any)) {\n    issues.push({\n      code: 'invalid_type',\n      message: 'This type of GeoJSON object is not allowed here.',\n      loc: value.loc,\n    });\n\n    return {};\n  }\n\n  return {\n    type: value.value as GeoJSON['type'],\n    objectNode: node,\n  };\n}\n","import { HintIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\n\nexport function getMemberValue(\n  issues: HintIssue[],\n  node: ObjectNode,\n  name: string\n) {\n  const member = node.members.find(member => {\n    return member.name.value === name;\n  });\n\n  if (!member) {\n    issues.push({\n      code: 'invalid_type',\n      message: `This GeoJSON object requires a ${name} member but it is missing.`,\n      loc: node.loc,\n    });\n\n    return null;\n  }\n\n  return member.value;\n}\n","import { HintIssue } from './errors';\nimport { Node, ArrayNode } from '@humanwhocodes/momoa';\n\nexport function getArray(\n  issues: HintIssue[],\n  node: Node | null\n): ArrayNode | null {\n  if (node?.type === 'Array') return node;\n  if (node) {\n    issues.push({\n      code: 'invalid_type',\n      message: 'This must be an array.',\n      loc: node.loc,\n    });\n  }\n  return null;\n}\n","import { HintIssue } from './errors';\nimport { Node, ObjectNode } from '@humanwhocodes/momoa';\n\nexport function getObject(\n  issues: HintIssue[],\n  node: Node | null\n): ObjectNode | null {\n  if (node?.type === 'Object') return node;\n  if (node) {\n    issues.push({\n      code: 'invalid_type',\n      message: 'This must be an object.',\n      loc: node.loc,\n    });\n  }\n  return null;\n}\n","import { HintIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\nimport { getMemberValue } from './get_member_value';\nimport { getArray } from './get_array';\n\nexport function getCoordinates(issues: HintIssue[], node: ObjectNode) {\n  const coordinatesMember = getMemberValue(issues, node, 'coordinates');\n  if (!coordinatesMember) return null;\n  return getArray(issues, coordinatesMember);\n}\n","import { HintIssue } from './errors';\nimport { ArrayNode } from '@humanwhocodes/momoa';\n\nexport function enforcePosition(issues: HintIssue[], node: ArrayNode | null) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  if (node.elements.length < 2 || node.elements.length > 3) {\n    issues.push({\n      code: 'invalid_type',\n      message: `A position should have 2 or 3 elements - found ${node.elements.length}.`,\n      loc: node.loc,\n    });\n  }\n\n  for (let element of node.elements) {\n    if (element.type !== 'Number') {\n      issues.push({\n        code: 'invalid_type',\n        message: 'Each element in a position must be a number.',\n        loc: element.loc,\n      });\n      return;\n    }\n  }\n}\n","import { HintIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\n\nexport function checkDuplicateKeys(\n  issues: HintIssue[],\n  node: ObjectNode\n): ObjectNode {\n  let keys = new Set<string>();\n  for (let {\n    name: { value },\n    loc,\n  } of node.members) {\n    if (keys.has(value)) {\n      issues.push({\n        code: 'invalid_type',\n        message: 'Duplicate properties are ambiguous in GeoJSON',\n        loc: loc,\n      });\n    }\n    keys.add(value);\n  }\n  return node;\n}\n","import { HintIssue } from './errors';\nimport { ArrayNode, NumberNode } from '@humanwhocodes/momoa';\n\nexport function enforceSamePosition(issues: HintIssue[], node: ArrayNode) {\n  const first = node.elements[0] as ArrayNode;\n  const last = node.elements[node.elements.length - 1] as ArrayNode;\n\n  if (first.elements.length !== last.elements.length) {\n    issues.push({\n      code: 'invalid_type',\n      message:\n        'First and last positions of a Polygon or MultiPolygon’s ring should be the same.',\n      loc: first.loc,\n    });\n    return;\n  }\n\n  for (let j = 0; j < first.elements.length; j++) {\n    const firstValue = (first.elements[j] as NumberNode).value;\n    const secondValue = (last.elements[j] as NumberNode).value;\n    if (firstValue !== secondValue) {\n      issues.push({\n        code: 'invalid_type',\n        message:\n          'First and last positions of a Polygon or MultiPolygon’s ring should be the same.',\n        loc: last.elements[j].loc,\n      });\n      return;\n    }\n  }\n}\n","import { HintIssue } from './errors';\nimport { enforcePosition } from './enforce_position';\nimport { enforceSamePosition } from './enforce_same_position';\nimport { Node, ArrayNode } from '@humanwhocodes/momoa';\n\nfunction getArray(issues: HintIssue[], node: Node): ArrayNode | null {\n  if (node.type !== 'Array') {\n    issues.push({\n      code: 'invalid_type',\n      message: 'Expected to find an array of positions here.',\n      loc: node.loc,\n    });\n    return null;\n  }\n  return node;\n}\n\ntype PositionKind = 'Polygon' | 'LineString';\n\nexport function enforcePositionArray(\n  issues: HintIssue[],\n  node: Node | null,\n  kind?: PositionKind\n) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  node = getArray(issues, node);\n  if (!node) return;\n\n  for (let element of node.elements) {\n    if (element.type !== 'Array') {\n      issues.push({\n        code: 'invalid_type',\n        message: 'Expected to find a position here, found another type.',\n        loc: element.loc,\n      });\n      return;\n    } else {\n      enforcePosition(issues, element);\n    }\n  }\n\n  switch (kind) {\n    case 'LineString': {\n      if (node.elements.length < 2) {\n        issues.push({\n          code: 'invalid_type',\n          message: 'Expected to find two or more positions here.',\n          loc: node.loc,\n        });\n      }\n      break;\n    }\n    case 'Polygon':\n      if (node.elements.length < 4) {\n        issues.push({\n          code: 'invalid_type',\n          message: 'Expected to find four or more positions here.',\n          loc: node.loc,\n        });\n      }\n      enforceSamePosition(issues, node);\n      break;\n  }\n}\n\nexport function enforcePositionArray2(\n  issues: HintIssue[],\n  node: Node | null,\n  kind?: PositionKind\n) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  node = getArray(issues, node);\n  if (!node) return;\n\n  for (let element of node.elements) {\n    enforcePositionArray(issues, element, kind);\n  }\n}\n\nexport function enforcePositionArray3(\n  issues: HintIssue[],\n  node: ArrayNode | null,\n  kind?: PositionKind\n) {\n  // This error has already been caught. Allow a no-op for simplicity.\n  if (node === null) return;\n\n  node = getArray(issues, node);\n  if (!node) return;\n\n  for (let element of node.elements) {\n    enforcePositionArray2(issues, element, kind);\n  }\n}\n","import { HintIssue } from './errors';\nimport { ObjectNode } from '@humanwhocodes/momoa';\nimport { getArray } from './get_array';\n\nexport function enforceBbox(issues: HintIssue[], node: ObjectNode) {\n  const member = node.members.find(member => {\n    return member.name.value === 'bbox';\n  });\n\n  // bboxes are optional\n  if (member === undefined) return;\n\n  const array = getArray(issues, member.value);\n\n  if (!array) return;\n\n  if (!(array.elements.length === 4 || array.elements.length === 6)) {\n    issues.push({\n      code: 'invalid_type',\n      message: 'A bbox must have 4 or 6 positions',\n      loc: array.loc,\n    });\n  }\n\n  for (let element of array.elements) {\n    if (element.type !== 'Number') {\n      issues.push({\n        code: 'invalid_type',\n        message: 'Each element in a bbox must be a number.',\n        loc: element.loc,\n      });\n      return;\n    }\n  }\n}\n","import { HintIssue } from './errors';\nimport { ObjectNode, MemberNode } from '@humanwhocodes/momoa';\n\ntype PropertiesFrom = 'Feature' | 'FeatureCollection' | 'Geometry';\n\nfunction forbidProperty(\n  issues: HintIssue[],\n  member: MemberNode,\n  propertiesFrom: PropertiesFrom,\n  name: string\n) {\n  if (member.name.value === name) {\n    issues.push({\n      code: 'invalid_type',\n      message: `${propertiesFrom} objects cannot contain a member named ${member.name.value}`,\n      loc: member.name.loc,\n    });\n  }\n}\n\nconst FORBIDDEN_PROPERTIES = {\n  Geometry: ['properties', 'geometry', 'features'],\n  Feature: ['features'],\n  FeatureCollection: ['properties', 'coordinates'],\n};\n\nexport function forbidConfusingProperties(\n  issues: HintIssue[],\n  node: ObjectNode,\n  propertiesFrom: PropertiesFrom\n) {\n  for (let member of node.members) {\n    for (let property of FORBIDDEN_PROPERTIES[propertiesFrom]) {\n      forbidProperty(issues, member, propertiesFrom, property);\n    }\n  }\n}\n","import { parse, evaluate, Node, ObjectNode } from '@humanwhocodes/momoa';\nimport { GeoJSON } from 'geojson';\nimport { HintIssue, HintError } from './errors';\nimport {\n  GeoJSONTypeSet,\n  GEOJSON_TYPES,\n  GEOJSON_GEOMETRY_TYPES,\n  GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION,\n  GEOJSON_FEATURE_TYPE,\n} from './types';\nimport { getType } from './get_type';\nimport { getMemberValue } from './get_member_value';\nimport { getArray } from './get_array';\nimport { getObject } from './get_object';\nimport { getCoordinates } from './get_coordinates';\nimport { enforcePosition } from './enforce_position';\nimport { checkDuplicateKeys } from './check_duplicate_keys';\nimport {\n  enforcePositionArray,\n  enforcePositionArray2,\n  enforcePositionArray3,\n} from './enforce_position_array';\nimport { enforceBbox } from './enforce_bbox';\nimport { forbidConfusingProperties } from './forbid_confusing_properties';\n\ntype Checker = (issues: HintIssue[], node: ObjectNode) => void;\n\nconst checkGeometryShared: Checker = (issues, node) => {\n  enforceBbox(issues, node);\n  forbidConfusingProperties(issues, node, 'Geometry');\n};\n\nconst checkLineString: Checker = (issues, node) => {\n  enforcePositionArray(issues, getCoordinates(issues, node), 'LineString');\n  checkGeometryShared(issues, node);\n};\n\nconst checkMultiLineString: Checker = (issues, node) => {\n  enforcePositionArray2(issues, getCoordinates(issues, node), 'LineString');\n  checkGeometryShared(issues, node);\n};\n\nconst checkPolygon: Checker = (issues, node) => {\n  enforcePositionArray2(issues, getCoordinates(issues, node), 'Polygon');\n  checkGeometryShared(issues, node);\n};\n\nconst checkMultiPolygon: Checker = (issues, node) => {\n  enforcePositionArray3(issues, getCoordinates(issues, node), 'Polygon');\n  checkGeometryShared(issues, node);\n};\n\nconst checkPoint: Checker = (issues, node) => {\n  enforcePosition(issues, getCoordinates(issues, node));\n  checkGeometryShared(issues, node);\n};\n\nconst checkMultiPoint: Checker = (issues, node) => {\n  enforcePositionArray(issues, getCoordinates(issues, node));\n  checkGeometryShared(issues, node);\n};\n\nconst checkGeometryCollection: Checker = (issues, node) => {\n  checkGeometryShared(issues, node);\n  const geometriesMember = getArray(\n    issues,\n    getMemberValue(issues, node, 'geometries')\n  );\n  if (!geometriesMember) return;\n  for (let element of geometriesMember.elements) {\n    checkObject(issues, element, GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION);\n  }\n};\n\nconst checkFeature: Checker = (issues, node) => {\n  forbidConfusingProperties(issues, node, 'Feature');\n  const geometryMember = getMemberValue(issues, node, 'geometry');\n  enforceBbox(issues, node);\n  if (geometryMember?.type !== 'Null') {\n    const geometry = getObject(issues, geometryMember);\n    if (geometry) checkObject(issues, geometry, GEOJSON_GEOMETRY_TYPES);\n  }\n\n  const idMember = node.members.find(member => {\n    return member.name.value === 'id';\n  });\n  if (\n    idMember &&\n    !(idMember.value.type === 'String' || idMember.value.type === 'Number')\n  ) {\n    issues.push({\n      code: 'invalid_type',\n      message: `The Feature id must be a string or number.`,\n      loc: idMember.loc,\n    });\n  }\n\n  const properties = getMemberValue(issues, node, 'properties');\n  if (!properties) {\n    issues.push({\n      code: 'invalid_type',\n      message: `The properties member is missing.`,\n      loc: node.loc,\n    });\n    return;\n  }\n\n  const { type } = properties;\n\n  if (!(type === 'Object' || type === 'Null')) {\n    issues.push({\n      code: 'invalid_type',\n      message: `The Feature properties member can be an object or null.`,\n      loc: node.loc,\n    });\n  }\n};\n\nconst checkFeatureCollection: Checker = (issues, node) => {\n  forbidConfusingProperties(issues, node, 'FeatureCollection');\n  const featuresMember = getArray(\n    issues,\n    getMemberValue(issues, node, 'features')\n  );\n  if (!featuresMember) return;\n  for (let feature of featuresMember.elements) {\n    const obj = getObject(issues, feature);\n    if (obj) {\n      getType(issues, obj, GEOJSON_FEATURE_TYPE);\n      checkFeature(issues, obj);\n    }\n  }\n};\n\nconst CHECKERS: Record<GeoJSON['type'], Checker> = {\n  LineString: checkLineString,\n  MultiLineString: checkMultiLineString,\n\n  Polygon: checkPolygon,\n  MultiPolygon: checkMultiPolygon,\n\n  Point: checkPoint,\n  MultiPoint: checkMultiPoint,\n\n  GeometryCollection: checkGeometryCollection,\n\n  Feature: checkFeature,\n  FeatureCollection: checkFeatureCollection,\n};\n\nfunction checkObject(\n  issues: HintIssue[],\n  node: Node,\n  typeSet: GeoJSONTypeSet = GEOJSON_TYPES\n) {\n  const { type, objectNode } = getType(issues, node, typeSet);\n  if (!(type && objectNode)) return;\n  checkDuplicateKeys(issues, objectNode);\n  CHECKERS[type](issues, objectNode);\n}\n\nexport const check = (jsonStr: string): GeoJSON => {\n  const issues: HintIssue[] = [];\n  let ast;\n  try {\n    ast = parse(jsonStr, {\n      ranges: true,\n    });\n  } catch (e) {\n    issues.push({\n      code: 'invalid_json',\n      line: e.line,\n    });\n  }\n  if (ast) checkObject(issues, ast.body);\n  if (issues.length || !ast) throw new HintError(issues);\n  return evaluate(ast);\n};\n\nexport { HintError, HintIssue };\n"],"names":["HintError","Error","constructor","issues","actualProto","new","target","prototype","Object","setPrototypeOf","message","JSON","stringify","GEOJSON_FEATURE_TYPE","Set","GEOJSON_GEOMETRY_TYPES","GEOJSON_GEOMETRY_TYPES_EX_GEOMETRY_COLLECTION","GEOJSON_TYPES","getType","node","allowedTypes","type","code","loc","typeMember","members","find","member","name","value","push","has","objectNode","getMemberValue","getArray","getObject","getCoordinates","coordinatesMember","enforcePosition","elements","length","element","checkDuplicateKeys","keys","add","enforceSamePosition","first","last","j","firstValue","secondValue","enforcePositionArray","kind","enforcePositionArray2","enforcePositionArray3","enforceBbox","undefined","array","forbidProperty","propertiesFrom","FORBIDDEN_PROPERTIES","Geometry","Feature","FeatureCollection","forbidConfusingProperties","property","checkGeometryShared","checkLineString","checkMultiLineString","checkPolygon","checkMultiPolygon","checkPoint","checkMultiPoint","checkGeometryCollection","geometriesMember","checkObject","checkFeature","geometryMember","geometry","idMember","properties","checkFeatureCollection","featuresMember","feature","obj","CHECKERS","LineString","MultiLineString","Polygon","MultiPolygon","Point","MultiPoint","GeometryCollection","typeSet","check","jsonStr","ast","parse","ranges","e","line","body","evaluate"],"mappings":"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"}